Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY repeatedstmts END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 repeatedstmts: statement SEMICOLON chainedstmts

    8 chainedstmts: %empty
    9             | statement SEMICOLON chainedstmts

   10 declaration: IDENT identifiers COLON decdef

   11 identifiers: %empty
   12            | COMMA IDENT identifiers

   13 decdef: arraydec INTEGER
   14       | ENUM L_PAREN identifiers R_PAREN

   15 arraydec: %empty
   16         | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

   17 statement: var ASSIGN expression
   18          | IF boolexpr THEN repeatedstmts elsestmt ENDIF
   19          | WHILE boolexpr BEGINLOOP repeatedstmts ENDLOOP
   20          | DO BEGINLOOP repeatedstmts ENDLOOP WHILE boolexpr
   21          | READ vars
   22          | WRITE vars
   23          | CONTINUE
   24          | RETURN expression

   25 elsestmt: %empty
   26         | ELSE repeatedstmts

   27 vars: var morevars

   28 morevars: %empty
   29         | COMMA var morevars

   30 boolexpr: relation_and_expr or_rel_and_expr

   31 or_rel_and_expr: %empty
   32                | OR relation_and_expr or_rel_and_expr

   33 relation_and_expr: relation_expr and_rel_expr

   34 and_rel_expr: %empty
   35             | AND relation_expr and_rel_expr

   36 relation_expr: NOT expression comp expression
   37              | NOT TRUE
   38              | NOT FALSE
   39              | NOT L_PAREN boolexpr R_PAREN
   40              | expression comp expression
   41              | TRUE
   42              | FALSE
   43              | L_PAREN boolexpr R_PAREN

   44 comp: EQ
   45     | NEQ
   46     | LT
   47     | GT
   48     | LTE
   49     | GTE

   50 expression: multiplicative_expr
   51           | multiplicative_expr ADD multiplicative_expr
   52           | multiplicative_expr MINUS multiplicative_expr

   53 multiplicative_expr: term
   54                    | term MULT term
   55                    | term DIV term
   56                    | term MOD term

   57 term: MINUS var
   58     | MINUS NUMBER
   59     | MINUS L_PAREN expression R_PAREN
   60     | var
   61     | NUMBER
   62     | L_PAREN expression R_PAREN
   63     | IDENT L_PAREN optional_exprs R_PAREN

   64 optional_exprs: %empty
   65               | expression chained_exprs

   66 chained_exprs: %empty
   67              | COMMA expression chained_exprs

   68 var: IDENT
   69    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 13
ARRAY (266) 16
ENUM (267) 14
OF (268) 16
IF (269) 18
THEN (270) 18
ENDIF (271) 18
ELSE (272) 26
WHILE (273) 19 20
DO (274) 20
BEGINLOOP (275) 19 20
ENDLOOP (276) 19 20
CONTINUE (277) 23
READ (278) 21
WRITE (279) 22
TRUE (280) 37 41
FALSE (281) 38 42
RETURN (282) 24
SEMICOLON (283) 4 6 7 9
COLON (284) 10
COMMA (285) 12 29 67
L_PAREN (286) 14 39 43 59 62 63
R_PAREN (287) 14 39 43 59 62 63
L_SQUARE_BRACKET (288) 16 69
R_SQUARE_BRACKET (289) 16 69
ASSIGN (290) 17
IDENT (291) 4 10 12 63 68 69
NUMBER (292) 16 58 61
ADD (293) 51
MINUS (294) 52 57 58 59
EQ (295) 44
NEQ (296) 45
GT (297) 47
GTE (298) 49
LT (299) 46
LTE (300) 48
NOT (301) 36 37 38 39
AND (302) 35
OR (303) 32
MULT (304) 54
DIV (305) 55
MOD (306) 56


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
declarations (56)
    on left: 5 6, on right: 4 6
repeatedstmts (57)
    on left: 7, on right: 4 18 19 20 26
chainedstmts (58)
    on left: 8 9, on right: 7 9
declaration (59)
    on left: 10, on right: 6
identifiers (60)
    on left: 11 12, on right: 10 12 14
decdef (61)
    on left: 13 14, on right: 10
arraydec (62)
    on left: 15 16, on right: 13
statement (63)
    on left: 17 18 19 20 21 22 23 24, on right: 7 9
elsestmt (64)
    on left: 25 26, on right: 18
vars (65)
    on left: 27, on right: 21 22
morevars (66)
    on left: 28 29, on right: 27 29
boolexpr (67)
    on left: 30, on right: 18 19 20 39 43
or_rel_and_expr (68)
    on left: 31 32, on right: 30 32
relation_and_expr (69)
    on left: 33, on right: 30 32
and_rel_expr (70)
    on left: 34 35, on right: 33 35
relation_expr (71)
    on left: 36 37 38 39 40 41 42 43, on right: 33 35
comp (72)
    on left: 44 45 46 47 48 49, on right: 36 40
expression (73)
    on left: 50 51 52, on right: 17 24 36 40 59 62 65 67 69
multiplicative_expr (74)
    on left: 53 54 55 56, on right: 50 51 52
term (75)
    on left: 57 58 59 60 61 62 63, on right: 53 54 55 56
optional_exprs (76)
    on left: 64 65, on right: 63
chained_exprs (77)
    on left: 66 67, on right: 65 67
var (78)
    on left: 68 69, on right: 17 27 29 57 60


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY repeatedstmts END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY repeatedstmts END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY repeatedstmts END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY repeatedstmts END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12


State 10

   10 declaration: IDENT . identifiers COLON decdef

    COMMA  shift, and go to state 13

    $default  reduce using rule 11 (identifiers)

    identifiers  go to state 14


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY repeatedstmts END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

   12 identifiers: COMMA . IDENT identifiers

    IDENT  shift, and go to state 17


State 14

   10 declaration: IDENT identifiers . COLON decdef

    COLON  shift, and go to state 18


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY repeatedstmts END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 20
    declaration   go to state 12


State 17

   12 identifiers: COMMA IDENT . identifiers

    COMMA  shift, and go to state 13

    $default  reduce using rule 11 (identifiers)

    identifiers  go to state 21


State 18

   10 declaration: IDENT identifiers COLON . decdef

    ARRAY  shift, and go to state 22
    ENUM   shift, and go to state 23

    $default  reduce using rule 15 (arraydec)

    decdef    go to state 24
    arraydec  go to state 25


State 19

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY repeatedstmts END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 26
    declaration   go to state 12


State 20

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 21

   12 identifiers: COMMA IDENT identifiers .

    $default  reduce using rule 12 (identifiers)


State 22

   16 arraydec: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

    L_SQUARE_BRACKET  shift, and go to state 27


State 23

   14 decdef: ENUM . L_PAREN identifiers R_PAREN

    L_PAREN  shift, and go to state 28


State 24

   10 declaration: IDENT identifiers COLON decdef .

    $default  reduce using rule 10 (declaration)


State 25

   13 decdef: arraydec . INTEGER

    INTEGER  shift, and go to state 29


State 26

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY repeatedstmts END_BODY

    END_LOCALS  shift, and go to state 30


State 27

   16 arraydec: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF

    NUMBER  shift, and go to state 31


State 28

   14 decdef: ENUM L_PAREN . identifiers R_PAREN

    COMMA  shift, and go to state 13

    $default  reduce using rule 11 (identifiers)

    identifiers  go to state 32


State 29

   13 decdef: arraydec INTEGER .

    $default  reduce using rule 13 (decdef)


State 30

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY repeatedstmts END_BODY

    BEGIN_BODY  shift, and go to state 33


State 31

   16 arraydec: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF

    R_SQUARE_BRACKET  shift, and go to state 34


State 32

   14 decdef: ENUM L_PAREN identifiers . R_PAREN

    R_PAREN  shift, and go to state 35


State 33

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . repeatedstmts END_BODY

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    repeatedstmts  go to state 44
    statement      go to state 45
    var            go to state 46


State 34

   16 arraydec: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF

    OF  shift, and go to state 47


State 35

   14 decdef: ENUM L_PAREN identifiers R_PAREN .

    $default  reduce using rule 14 (decdef)


State 36

   18 statement: IF . boolexpr THEN repeatedstmts elsestmt ENDIF

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53
    NOT      shift, and go to state 54

    boolexpr             go to state 55
    relation_and_expr    go to state 56
    relation_expr        go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 37

   19 statement: WHILE . boolexpr BEGINLOOP repeatedstmts ENDLOOP

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53
    NOT      shift, and go to state 54

    boolexpr             go to state 62
    relation_and_expr    go to state 56
    relation_expr        go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 38

   20 statement: DO . BEGINLOOP repeatedstmts ENDLOOP WHILE boolexpr

    BEGINLOOP  shift, and go to state 63


State 39

   23 statement: CONTINUE .

    $default  reduce using rule 23 (statement)


State 40

   21 statement: READ . vars

    IDENT  shift, and go to state 43

    vars  go to state 64
    var   go to state 65


State 41

   22 statement: WRITE . vars

    IDENT  shift, and go to state 43

    vars  go to state 66
    var   go to state 65


State 42

   24 statement: RETURN . expression

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53

    expression           go to state 68
    multiplicative_expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 43

   68 var: IDENT .
   69    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 68 (var)


State 44

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY repeatedstmts . END_BODY

    END_BODY  shift, and go to state 70


State 45

    7 repeatedstmts: statement . SEMICOLON chainedstmts

    SEMICOLON  shift, and go to state 71


State 46

   17 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 72


State 47

   16 arraydec: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF .

    $default  reduce using rule 16 (arraydec)


State 48

   41 relation_expr: TRUE .

    $default  reduce using rule 41 (relation_expr)


State 49

   42 relation_expr: FALSE .

    $default  reduce using rule 42 (relation_expr)


State 50

   43 relation_expr: L_PAREN . boolexpr R_PAREN
   62 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53
    NOT      shift, and go to state 54

    boolexpr             go to state 73
    relation_and_expr    go to state 56
    relation_expr        go to state 57
    expression           go to state 74
    multiplicative_expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 51

   63 term: IDENT . L_PAREN optional_exprs R_PAREN
   68 var: IDENT .
   69    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 75
    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 68 (var)


State 52

   61 term: NUMBER .

    $default  reduce using rule 61 (term)


State 53

   57 term: MINUS . var
   58     | MINUS . NUMBER
   59     | MINUS . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 77

    var  go to state 78


State 54

   36 relation_expr: NOT . expression comp expression
   37              | NOT . TRUE
   38              | NOT . FALSE
   39              | NOT . L_PAREN boolexpr R_PAREN

    TRUE     shift, and go to state 79
    FALSE    shift, and go to state 80
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53

    expression           go to state 82
    multiplicative_expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 55

   18 statement: IF boolexpr . THEN repeatedstmts elsestmt ENDIF

    THEN  shift, and go to state 83


State 56

   30 boolexpr: relation_and_expr . or_rel_and_expr

    OR  shift, and go to state 84

    $default  reduce using rule 31 (or_rel_and_expr)

    or_rel_and_expr  go to state 85


State 57

   33 relation_and_expr: relation_expr . and_rel_expr

    AND  shift, and go to state 86

    $default  reduce using rule 34 (and_rel_expr)

    and_rel_expr  go to state 87


State 58

   40 relation_expr: expression . comp expression

    EQ   shift, and go to state 88
    NEQ  shift, and go to state 89
    GT   shift, and go to state 90
    GTE  shift, and go to state 91
    LT   shift, and go to state 92
    LTE  shift, and go to state 93

    comp  go to state 94


State 59

   50 expression: multiplicative_expr .
   51           | multiplicative_expr . ADD multiplicative_expr
   52           | multiplicative_expr . MINUS multiplicative_expr

    ADD    shift, and go to state 95
    MINUS  shift, and go to state 96

    $default  reduce using rule 50 (expression)


State 60

   53 multiplicative_expr: term .
   54                    | term . MULT term
   55                    | term . DIV term
   56                    | term . MOD term

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 53 (multiplicative_expr)


State 61

   60 term: var .

    $default  reduce using rule 60 (term)


State 62

   19 statement: WHILE boolexpr . BEGINLOOP repeatedstmts ENDLOOP

    BEGINLOOP  shift, and go to state 100


State 63

   20 statement: DO BEGINLOOP . repeatedstmts ENDLOOP WHILE boolexpr

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    repeatedstmts  go to state 101
    statement      go to state 45
    var            go to state 46


State 64

   21 statement: READ vars .

    $default  reduce using rule 21 (statement)


State 65

   27 vars: var . morevars

    COMMA  shift, and go to state 102

    $default  reduce using rule 28 (morevars)

    morevars  go to state 103


State 66

   22 statement: WRITE vars .

    $default  reduce using rule 22 (statement)


State 67

   62 term: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53

    expression           go to state 104
    multiplicative_expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 68

   24 statement: RETURN expression .

    $default  reduce using rule 24 (statement)


State 69

   69 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53

    expression           go to state 105
    multiplicative_expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 70

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY repeatedstmts END_BODY .

    $default  reduce using rule 4 (function)


State 71

    7 repeatedstmts: statement SEMICOLON . chainedstmts

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    $default  reduce using rule 8 (chainedstmts)

    chainedstmts  go to state 106
    statement     go to state 107
    var           go to state 46


State 72

   17 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53

    expression           go to state 108
    multiplicative_expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 73

   43 relation_expr: L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 109


State 74

   40 relation_expr: expression . comp expression
   62 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 110
    EQ       shift, and go to state 88
    NEQ      shift, and go to state 89
    GT       shift, and go to state 90
    GTE      shift, and go to state 91
    LT       shift, and go to state 92
    LTE      shift, and go to state 93

    comp  go to state 94


State 75

   63 term: IDENT L_PAREN . optional_exprs R_PAREN

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53

    $default  reduce using rule 64 (optional_exprs)

    expression           go to state 111
    multiplicative_expr  go to state 59
    term                 go to state 60
    optional_exprs       go to state 112
    var                  go to state 61


State 76

   59 term: MINUS L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53

    expression           go to state 113
    multiplicative_expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 77

   58 term: MINUS NUMBER .

    $default  reduce using rule 58 (term)


State 78

   57 term: MINUS var .

    $default  reduce using rule 57 (term)


State 79

   37 relation_expr: NOT TRUE .

    $default  reduce using rule 37 (relation_expr)


State 80

   38 relation_expr: NOT FALSE .

    $default  reduce using rule 38 (relation_expr)


State 81

   39 relation_expr: NOT L_PAREN . boolexpr R_PAREN
   62 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53
    NOT      shift, and go to state 54

    boolexpr             go to state 114
    relation_and_expr    go to state 56
    relation_expr        go to state 57
    expression           go to state 74
    multiplicative_expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 82

   36 relation_expr: NOT expression . comp expression

    EQ   shift, and go to state 88
    NEQ  shift, and go to state 89
    GT   shift, and go to state 90
    GTE  shift, and go to state 91
    LT   shift, and go to state 92
    LTE  shift, and go to state 93

    comp  go to state 115


State 83

   18 statement: IF boolexpr THEN . repeatedstmts elsestmt ENDIF

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    repeatedstmts  go to state 116
    statement      go to state 45
    var            go to state 46


State 84

   32 or_rel_and_expr: OR . relation_and_expr or_rel_and_expr

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53
    NOT      shift, and go to state 54

    relation_and_expr    go to state 117
    relation_expr        go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 85

   30 boolexpr: relation_and_expr or_rel_and_expr .

    $default  reduce using rule 30 (boolexpr)


State 86

   35 and_rel_expr: AND . relation_expr and_rel_expr

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53
    NOT      shift, and go to state 54

    relation_expr        go to state 118
    expression           go to state 58
    multiplicative_expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 87

   33 relation_and_expr: relation_expr and_rel_expr .

    $default  reduce using rule 33 (relation_and_expr)


State 88

   44 comp: EQ .

    $default  reduce using rule 44 (comp)


State 89

   45 comp: NEQ .

    $default  reduce using rule 45 (comp)


State 90

   47 comp: GT .

    $default  reduce using rule 47 (comp)


State 91

   49 comp: GTE .

    $default  reduce using rule 49 (comp)


State 92

   46 comp: LT .

    $default  reduce using rule 46 (comp)


State 93

   48 comp: LTE .

    $default  reduce using rule 48 (comp)


State 94

   40 relation_expr: expression comp . expression

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53

    expression           go to state 119
    multiplicative_expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 95

   51 expression: multiplicative_expr ADD . multiplicative_expr

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53

    multiplicative_expr  go to state 120
    term                 go to state 60
    var                  go to state 61


State 96

   52 expression: multiplicative_expr MINUS . multiplicative_expr

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53

    multiplicative_expr  go to state 121
    term                 go to state 60
    var                  go to state 61


State 97

   54 multiplicative_expr: term MULT . term

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53

    term  go to state 122
    var   go to state 61


State 98

   55 multiplicative_expr: term DIV . term

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53

    term  go to state 123
    var   go to state 61


State 99

   56 multiplicative_expr: term MOD . term

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53

    term  go to state 124
    var   go to state 61


State 100

   19 statement: WHILE boolexpr BEGINLOOP . repeatedstmts ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    repeatedstmts  go to state 125
    statement      go to state 45
    var            go to state 46


State 101

   20 statement: DO BEGINLOOP repeatedstmts . ENDLOOP WHILE boolexpr

    ENDLOOP  shift, and go to state 126


State 102

   29 morevars: COMMA . var morevars

    IDENT  shift, and go to state 43

    var  go to state 127


State 103

   27 vars: var morevars .

    $default  reduce using rule 27 (vars)


State 104

   62 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 110


State 105

   69 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 128


State 106

    7 repeatedstmts: statement SEMICOLON chainedstmts .

    $default  reduce using rule 7 (repeatedstmts)


State 107

    9 chainedstmts: statement . SEMICOLON chainedstmts

    SEMICOLON  shift, and go to state 129


State 108

   17 statement: var ASSIGN expression .

    $default  reduce using rule 17 (statement)


State 109

   43 relation_expr: L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 43 (relation_expr)


State 110

   62 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 62 (term)


State 111

   65 optional_exprs: expression . chained_exprs

    COMMA  shift, and go to state 130

    $default  reduce using rule 66 (chained_exprs)

    chained_exprs  go to state 131


State 112

   63 term: IDENT L_PAREN optional_exprs . R_PAREN

    R_PAREN  shift, and go to state 132


State 113

   59 term: MINUS L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 133


State 114

   39 relation_expr: NOT L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 134


State 115

   36 relation_expr: NOT expression comp . expression

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53

    expression           go to state 135
    multiplicative_expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 116

   18 statement: IF boolexpr THEN repeatedstmts . elsestmt ENDIF

    ELSE  shift, and go to state 136

    $default  reduce using rule 25 (elsestmt)

    elsestmt  go to state 137


State 117

   32 or_rel_and_expr: OR relation_and_expr . or_rel_and_expr

    OR  shift, and go to state 84

    $default  reduce using rule 31 (or_rel_and_expr)

    or_rel_and_expr  go to state 138


State 118

   35 and_rel_expr: AND relation_expr . and_rel_expr

    AND  shift, and go to state 86

    $default  reduce using rule 34 (and_rel_expr)

    and_rel_expr  go to state 139


State 119

   40 relation_expr: expression comp expression .

    $default  reduce using rule 40 (relation_expr)


State 120

   51 expression: multiplicative_expr ADD multiplicative_expr .

    $default  reduce using rule 51 (expression)


State 121

   52 expression: multiplicative_expr MINUS multiplicative_expr .

    $default  reduce using rule 52 (expression)


State 122

   54 multiplicative_expr: term MULT term .

    $default  reduce using rule 54 (multiplicative_expr)


State 123

   55 multiplicative_expr: term DIV term .

    $default  reduce using rule 55 (multiplicative_expr)


State 124

   56 multiplicative_expr: term MOD term .

    $default  reduce using rule 56 (multiplicative_expr)


State 125

   19 statement: WHILE boolexpr BEGINLOOP repeatedstmts . ENDLOOP

    ENDLOOP  shift, and go to state 140


State 126

   20 statement: DO BEGINLOOP repeatedstmts ENDLOOP . WHILE boolexpr

    WHILE  shift, and go to state 141


State 127

   29 morevars: COMMA var . morevars

    COMMA  shift, and go to state 102

    $default  reduce using rule 28 (morevars)

    morevars  go to state 142


State 128

   69 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 69 (var)


State 129

    9 chainedstmts: statement SEMICOLON . chainedstmts

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    $default  reduce using rule 8 (chainedstmts)

    chainedstmts  go to state 143
    statement     go to state 107
    var           go to state 46


State 130

   67 chained_exprs: COMMA . expression chained_exprs

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53

    expression           go to state 144
    multiplicative_expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 131

   65 optional_exprs: expression chained_exprs .

    $default  reduce using rule 65 (optional_exprs)


State 132

   63 term: IDENT L_PAREN optional_exprs R_PAREN .

    $default  reduce using rule 63 (term)


State 133

   59 term: MINUS L_PAREN expression R_PAREN .

    $default  reduce using rule 59 (term)


State 134

   39 relation_expr: NOT L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 39 (relation_expr)


State 135

   36 relation_expr: NOT expression comp expression .

    $default  reduce using rule 36 (relation_expr)


State 136

   26 elsestmt: ELSE . repeatedstmts

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    repeatedstmts  go to state 145
    statement      go to state 45
    var            go to state 46


State 137

   18 statement: IF boolexpr THEN repeatedstmts elsestmt . ENDIF

    ENDIF  shift, and go to state 146


State 138

   32 or_rel_and_expr: OR relation_and_expr or_rel_and_expr .

    $default  reduce using rule 32 (or_rel_and_expr)


State 139

   35 and_rel_expr: AND relation_expr and_rel_expr .

    $default  reduce using rule 35 (and_rel_expr)


State 140

   19 statement: WHILE boolexpr BEGINLOOP repeatedstmts ENDLOOP .

    $default  reduce using rule 19 (statement)


State 141

   20 statement: DO BEGINLOOP repeatedstmts ENDLOOP WHILE . boolexpr

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    MINUS    shift, and go to state 53
    NOT      shift, and go to state 54

    boolexpr             go to state 147
    relation_and_expr    go to state 56
    relation_expr        go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    term                 go to state 60
    var                  go to state 61


State 142

   29 morevars: COMMA var morevars .

    $default  reduce using rule 29 (morevars)


State 143

    9 chainedstmts: statement SEMICOLON chainedstmts .

    $default  reduce using rule 9 (chainedstmts)


State 144

   67 chained_exprs: COMMA expression . chained_exprs

    COMMA  shift, and go to state 130

    $default  reduce using rule 66 (chained_exprs)

    chained_exprs  go to state 148


State 145

   26 elsestmt: ELSE repeatedstmts .

    $default  reduce using rule 26 (elsestmt)


State 146

   18 statement: IF boolexpr THEN repeatedstmts elsestmt ENDIF .

    $default  reduce using rule 18 (statement)


State 147

   20 statement: DO BEGINLOOP repeatedstmts ENDLOOP WHILE boolexpr .

    $default  reduce using rule 20 (statement)


State 148

   67 chained_exprs: COMMA expression chained_exprs .

    $default  reduce using rule 67 (chained_exprs)
